<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Wordle</title>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"
    integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
  <script src="/javascripts/screen2p.js"></script>
  <script src="/javascripts/statistics-multiplayer.js"></script>

  <script defer src="/javascripts/keyboard_feature.js"></script>
  <script defer src="/javascripts/multiplayer_screen_dynamics.js"></script>
  <script defer src="/javascripts/change_gamemode.js"></script>
  <!-- Bootstrap bundle -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <link rel="stylesheet" href="/stylesheets/styles-screen2p.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
  <script src = 'https://cdn.socket.io/socket.io-3.0.1.min.js'></script>


</head>

<body>

  <div id='pop_message'>
    <div id='pop'></div>
  </div>

  <header class="d-flex justify-content-between mb-0">

    <section>
      <button type="button" class="btn bi bi-list ps-2 pt-0 pe-0" name="menu" id="Icon" data-bs-toggle="offcanvas"
        data-bs-target="#offcanvasmenu" aria-controls="offcanvasmenu" style="font-size: 1.8rem;"></button>
      <button type="button" class="btn bi bi-question-circle pt-0 py-0 ps-1 pb-1" name="instructions" id="Icon"
        style="font-size: 1.3rem;" data-bs-toggle="modal" data-bs-target="#InstructionsModal"></button>
    </section>

    <h1 class="fw-bold m-auto" id="primary_color">Wordle</h1>

    <section>
      <button type="button" class="btn bi bi-bar-chart-fill" name="menu" id="Icon" style="font-size: 1.4rem;"
        data-bs-toggle="modal" data-bs-target="#StatsModal"></button>
        <button type="button" class="btn bi bi-gear-fill p-0 pe-2" name="menu" id="Icon" data-bs-toggle="offcanvas"
        data-bs-target="#offcanvastheme" aria-controls="offcanvastheme" style="font-size: 1.4rem;"></button>
        <button type="button" onclick="addBoard('Njabulo')" class="btn bi bi-person-plus-fill p-0 pe-2" name="add-player" id="Icon" 
        style="font-size: 1.4rem;" data-bs-toggle="modal" data-bs-target="#AddPlayerModal"></button>    
      </section>

  </header>
  <hr class="p-0 mt-0 me-2" id="primary_color">

  <!-- Theme mode -->
  <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvastheme" aria-labelledby="offcanvastheme-label">
    <span id="dark_mode"> Dark mode: </span>  
    <label id="theme_mode" ></label>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>

  <!--menu content-->
  <div class="offcanvas offcanvas-start py-5 text-white" tabindex="-1" id="offcanvasmenu" aria-labelledby="offcanvasmenulabel">

    <select name = "mode" id = "gameMode">
      <option value = "None">Select game mode</option>
      <option value = "SinglePlayerMode">Single-player mode</option>
      <option value = "MultiPlayerMode">Multi-player mode</option>
    </select>

    <div class="offcanvas-header">
      <button type="button" class="btn btn-success" id = "logoutButton"><a class="text-white"href="#">Log out</a></button>
    </div>

    <div class="offcanvas-header">
      <button type="button" class="btn btn-success" id = "switchMode"><a class="text-white"href="#">Switch Mode</a></button>
      <button type="button" class="btn-close text-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body">
      <!--content-->

    </div>
  </div>

  <!--Instructions modal-->
  <div class="modal fade" id="InstructionsModal" tabindex="-1" aria-labelledby="InstructionsModalLabel"
    aria-hidden="false">
    <div class="modal-dialog modal-fullscreen">
      <div class="modal-content align-self-center w-75  align-items-center pt-5" id="main-content">
        <div class=" modal-header fw-bold fs-5" id="primary_color">
          <p class="m-auto">HOW TO PLAY</p>
          <button type="button" class="btn-close" id="Icon" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="primary_color">
          <p>Guess the <span class="fw-bold">WORDLE</span> in six tries.</p>

          <p class="py-0 my-1">Each guess must be a valid five-letter word. Hit the enter button to submit.</p>

          <p class="py-0">After each guess, the color of the tiles will changes to show how close your guess was to the
            word.</p>

          <hr>

          <p class="fw-bold">Examples</p>

          <p class="fs-1 fw-bold">
            <span id="W_back" class="border border-secondary px-2">W</span>
            <span class="border border-secondary px-3">E</span>
            <span class="border border-secondary px-3">A</span>
            <span class="border border-secondary px-3">R</span>
            <span class="border border-secondary px-3">Y</span>
          </p>

          <p>The letter <span class="fw-bold">W</span> is in the word and in the correct spot.</p>

          <p class="fs-1 fw-bold">
            <span class="border border-secondary px-3">P</span>
            <span id="I_back" class="border border-secondary px-4">I</span>
            <span class="border border-secondary px-3">L</span>
            <span class="border border-secondary px-3">L</span>
            <span class="border border-secondary px-3">S</span>
          </p>

          <p>The letter <span class="fw-bold">I</span> is in the word but in the wrong spot.</p>

          <p class="fs-1 fw-bold">
            <span class="border border-secondary px-3">V</span>
            <span class="border border-secondary px-3">A</span>
            <span class="border border-secondary px-3">G</span>
            <span id="U_back" class="border border-secondary px-3 ">U</span>
            <span class="border border-secondary px-3">E</span>
          </p>

          <p>The letter <span class="fw-bold">U</span> is not in the word in any spot.</p>

          <hr>

          <section class="fw-bold">
            <p>A new WORDLE will be available each day on the single player mode!</p>
          </section>
        </div>
      </div>
    </div>
  </div>

  <!--Stats modal-->
  <div class="modal fade" id="StatsModal" tabindex="-1" aria-labelledby="StatsModalLabel" aria-hidden="false">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <header class=" d-flex flex-row justify-content-around fw-bold">STATISTICS</header>
          <main class="d-flex flex-row justify-content-around">
            <section class="px-2">
              <div class="d-flex flex-row justify-content-around" id="playedp">0</div>
              <div class="d-flex flex-row justify-content-around">Played</div>
            </section>
            <section class="">
              <div class="d-flex flex-row justify-content-around" id="winp">0</div>
              <div class="d-flex flex-row justify-content-around">Win %</div>
            </section>
            <section class="">
              <div class="d-flex flex-row justify-content-around" id="streakp">0</div>
              <div>
                <div class="d-flex flex-row justify-content-around"> Current</div>
                <div class="d-flex flex-row justify-content-around">Streak</div>
              </div>
            </section>
            <section>
              <div class="d-flex flex-row justify-content-around" id="maxp">0</div>
              <div>
                <div class="d-flex flex-row justify-content-around" >Max</div>
                <div class="d-flex flex-row justify-content-around">Streak</div>
              </div>
            </section>            
          </main>
          <h4>guess distribution</h4>
          <div id="guess-distribution">
            <div class="graph-container">
              <div class="guess">1 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id="bar-1p">
                  <div class="num-guess" id="guess-1p">0</div>
                </div>
              </div>
            </div>
            <div class="graph-container">
              <div class="guess">2 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id="bar-2p">
                  <div class="num-guess" id="guess-2p">0</div>
                </div>
              </div>
            </div>
            <div class="graph-container">
              <div class="guess">3 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id="bar-3p">
                  <div class="num-guess" id="guess-3p">0</div>
                </div>
              </div>
            </div>
            <div class="graph-container">
              <div class="guess">4 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id="bar-4p">
                  <div class="num-guess" id="guess-4p">0</div>
                </div>
              </div>
            </div>
            <div class="graph-container">
              <div class="guess">5 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id = "bar-5p">
                  <div class="num-guess" id="guess-5p">0</div>
                </div>
              </div>
            </div>
            <div class="graph-container">
              <div class="guess">6 </div>
              <div class="graph">
                <div class="graph-bar" style="width: 7%" id="bar-6p">
                  <div class="num-guess" id="guess-6p">0</div>
                </div>
              </div>
            </div>
          </div>
          <div><h3>Next WORDLE in</h3></div>
          <div class="countdown" id="countdown">
            <div class="time"><h2  id="timer">00</h2></div>
          </div>
      </div>
        </div>
        <div class="modal-footer">
        </div>
      </div>
    </div>
  </div>

  <!--add player modal-->
  <div class="modal fade" id="AddPlayerModal" tabindex="-1" aria-labelledby="AddPlayerModalLabel" aria-hidden="false">
    <div class="modal-dialog">
      <div class="modal-content bg-black text-white ">
        <div class="modal-header bg-black  d-flex flex-row justify-content-center align-text-center">
          <p class="text-white mb-0 pb-0">Invite player</p>
          
        </div>
        <div class="modal-body">
          <main class="d-flex flex-row justify-content-around">

          </main>
        </div>
        <div class="modal-footer">
        </div>
      </div>
    </div>
  </div>
  
  <main class="align-self-center w-75 d-flex flex-column align-items-center pt-4" id="main-content">
    <ul id="boardList" class="d-flex flex-row justify-content-around list-unstyled">
      <li class="mx-5 pt-0">
        <p class="text-white d-flex flex-row justify-content-center align-text-center">You</p>
        <div id="board-container"></div>
        <div class="pb-2" id="checkerboard"></div>
      </li>
    </ul>
    
    <div class="pt-2" id="keyboard">
      <div class="keyboard-row">

        <button class="button" name="q">q</button>
        <button class="button" name="w">w</button>
        <button class="button" name="e">e</button>
        <button class="button" name="r">r</button>
        <button class="button" name="t">t</button>
        <button class="button" name="y">y</button>
        <button class="button" name="u">u</button>
        <button class="button" name="i">i</button>
        <button class="button" name="o">o</button>
        <button class="button" name="p">p</button>
      </div>

      <div class="keyboard-row">
        <div class="spacer-half"></div>
        <button class="button" name="a">a</button>
        <button class="button" name="s">s</button>
        <button class="button" name="d">d</button>
        <button class="button" name="f">f</button>
        <button class="button" name="g">g</button>
        <button class="button" name="h">h</button>
        <button class="button" name="j">j</button>
        <button class="button" name="k">k</button>
        <button class="button" name="l">l</button>
        <div class="spacer-half"></div>
      </div>
      <div class="keyboard-row">
        <button class="button" name="enter" id="wide-button">Enter</button>
        <button class="button" name="z">z</button>
        <button class="button" name="x">x</button>
        <button class="button" name="c">c</button>
        <button class="button" name="v">v</button>
        <button class="button" name="b">b</button>
        <button class="button" name="n">n</button>
        <button class="button" name="m">m</button>
        <button class="button" name="del" id="wide-button">Del</button>
      </div>
    </div>
  </main>


    
    <script>
        let users_added = []

        document.getElementById('invites').value = ''
        document.getElementById('gId').value = ''
        document.getElementById('player').value = ''
        

        const socket = io('http://localhost:3000');
        
        socket.on('connection');
        // sends data to the opponent, i.e this is what the oppenent gets
        socket.on('message', (data) =>{
            updateOpponentScreen(data);
        })

        socket.on('update', (data) => {
            localStorage.setItem('id', data)
        })

        socket.on('invite', (data) =>{
          document.getElementById('invites').value = data[0]
          document.getElementById('gId').value = data[1]

          alert('You have been Invited to a battle by ' + data[0] + 
          ', if you are afraid then decline  else accept the challenge. Dont forget to refresh your browser')
        })

        socket.on('join', (data)=>{
          users_added = data[1];
          alert('Finally, ' + data[0] + data[2])
        })

        let removeParticipant = function(participant){
          const index = users_added.indexOf(participant);
          let first_half = users_added.slice(0, index);
          let second_half = users_added.slice(index + 1, users_added.length);
          users_added.length = 0;
          if(first_half.length !== 0){
            users_added = users_added.concat(first_half);
          }
          if(first_half.length !== 0){
            users_added = users_added.concat(second_half);
          }
        }

        socket.on('leave', (data)=>{
          alert('Attention, ' + data + ' left  the game')
          removeParticipant(data)
        })

        socket.on('decline', (data) =>{
          alert('The request to invite ' + data + ' has been declined')
        })

        socket.on('userNotFound', (data) =>{
          alert('The username ' + data + ' does not exist')
        })

        socket.on('hostLeft', (data) =>{
          alert('Unfortunately, the host ' + data[0] + ' has left the game, ' + data[1] +
          ' will be the new host');
          removeParticipant(data[0]);
        })

        socket.on('hostMsg', (data) =>{
          alert('You have left the game!')
          users_added.length = 0;
        })

        socket.on('userNotConnected', (data) =>{
          let decision = confirm(data[0] + ' is currently unavailable, ' + 
          'do you want to send an email for a match later?')
          if(decision){
            // send an email
          }
        })

        socket.on('resetId', (data) =>{
          localStorage.setItem('id', data);
        })

        const sendMessage = function(msg){
            let username = localStorage.getItem('username');
            let id = localStorage.getItem('id');
            socket.emit('message', [username, id, msg]);
        }

        // gets the local storage
        if(localStorage.getItem('username') !== null){
            document.querySelector('#user').value = localStorage.getItem('username');
        }

        // renews the username whenever the page is refreshed
        document.addEventListener('DOMContentLoaded', ()=>{
            let username = localStorage.getItem('username');
            socket.emit('update', username);
        })

        document.getElementById('declineButton').addEventListener('click', ()=>{
          let id = document.getElementById('gId').value;
          let username = localStorage.getItem('username');
          let id_ = localStorage.getItem('id');
          if(document.getElementById('invites').value.length === 0){
             alert('You currently have no invite to decline :) ')
          }
          else {
            document.getElementById('invites').value = '';
            document.getElementById('gId').value = '';
            socket.emit('decline', [username, id, id_]);
          }
        })

        // whenever someone asks me for an invitation
        document.getElementById('inviteButton').addEventListener('click', ()=>{

          let username = localStorage.getItem('username');
          let id_ = localStorage.getItem('id');

          if(users_added.length === 0){
            let id = document.getElementById('gId').value;
            localStorage.setItem('id', id)
            let username_ = document.getElementById('invites').value;
            document.getElementById('invites').value = '';
            document.getElementById('gId').value = '';
            if(username_.length !== 0){
               socket.emit('join', [username, username_, id]);
            }
            else{
              alert('Kindly wait for an invite')
            }
          }else{
            alert('Please leave your current group before accepting other invites')
          }
        })

        // whenever I want to invite someone 
        document.getElementById('addButton').addEventListener('click', ()=>{
          const user_added = document.getElementById('player').value;
          let username = localStorage.getItem('username');
          let id = localStorage.getItem('id');

          if(document.getElementById('invites').value.length !== 0){
            alert('Please reject the invite before inviting someone')
          } 
          else if(!(users_added.includes(user_added) || user_added === '' || user_added === undefined || username === user_added)){
            socket.emit('invite', [user_added, username, id]);
          }
          else{
            alert('The user is already in or is undefined')
          }
        })

        document.getElementById('leaveButton').addEventListener('click', ()=>{
            let username = localStorage.getItem('username');
            let id = localStorage.getItem('id');
            users_added.length = 0;
            socket.emit('leave', [username, id]);
        })

        function addBoard(username){
          let count = Number(sessionStorage.getItem('count'))
          const list = document.getElementById('boardList')
          //item to add to the list
          let newBoard = document.createElement('li')
          newBoard.setAttribute('class', 'mx-5 pt-0')
          //list items
          let paragraph = document.createElement('p')
          paragraph.setAttribute('class', 'text-white d-flex flex-row justify-content-center align-text-center')
          let text = document.createTextNode(username)
          paragraph.appendChild(text)
          let board_container = document.createElement('div')
          board_container.setAttribute('id', 'board-container')
          let checker = document.createElement('div')
          checker.setAttribute('class', 'pb-2')
          checker.setAttribute('id',`checkerboard_${count}`)
          checker.setAttribute('style', 'display: grid; grid-template-columns: repeat(5, 1fr); grid-gap: 5px; padding: 10px; box-sizing: border-box; float:right ;')
          //append all the list elements
          newBoard.appendChild(paragraph)
          newBoard.appendChild(board_container)
          newBoard.appendChild(checker)
          //append new list element to the list
          list.appendChild(newBoard)


          const gameBoard= document.getElementById(`checkerboard_${count}`);

          for (let i=30; i<60; i++){
              let square = document.createElement("div");
              square.classList.add("square");
              square.setAttribute("id", i+1);
              gameBoard.appendChild(square);
          }
          sessionStorage.setItem('count', ++count)
        }

    </script>
  </div>

  <!-- Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
    crossorigin="anonymous"></script>
  <!--Toastr-->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script src="/javascripts/theme.js"></script>
  <script src="/javascripts/timer.js"></script>

</body>

</html>